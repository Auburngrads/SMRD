% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ALT.plot.time.v.x.R
\name{ALT.plot.time.v.x}
\alias{ALT.plot.time.v.x}
\title{Title}
\usage{
ALT.plot.time.v.x(
  results.object,
  x.of.interest = NULL,
  plan.values.string = NULL,
  plan.string = NULL,
  quantile.list = c(0.5),
  ylim = c(NA, NA),
  xlim = c(NA, NA),
  xlab = NULL,
  ylab = NULL,
  my.title = NULL,
  title.option = GetSMRDDefault("SMRD.TitleOption"),
  grids = F,
  numplotsim = 50,
  nxpoints = 60,
  response.on.yaxis = T,
  cex = 1,
  focus.variable = 1
)
}
\arguments{
\item{results.object}{}

\item{x.of.interest}{}

\item{plan.values.string}{}

\item{plan.string}{}

\item{quantile.list}{}

\item{ylim}{}

\item{xlim}{}

\item{xlab}{}

\item{ylab}{}

\item{my.title}{}

\item{title.option}{}

\item{grids}{}

\item{numplotsim}{}

\item{nxpoints}{}

\item{response.on.yaxis}{}

\item{cex}{}

\item{focus.variable}{}
}
\description{
Title
}
\examples{
\dontrun{

NelsonInsulation.Weibull.altpv  <- 
  get.alt.plan.values.from.slope.and.point(distribution = "Weibull",
                                           slope= c(-12.28,-1.296),
                                           relationship = c("log","log"),
                                           accelvar.units = c("vpm","cm"),
                                           time.units = "Hours", 
                                           censor.time = 1000, probs = c(1.8e-6),
                                           accelvar = c(80,.266), 
                                           beta = 1/.6734, 
                                           use.conditions = c(80,.266))

print(NelsonInsulation.Weibull.altpv)

##	define two-variable ALT test plans

NelsonInsulation.altplan <- 
  get.alt.test.plan.direct(accel.variable.levels = cbind(c(120,120,120,150,150,150,175,175,175,200,200,200),
                                                         c(.163,.266,.355,.163,.266,.355,.163,.266,.355,.163,.266,.355)),
                           number.of.units = c(11,18,11,8,14,8,8,14,8,11,18,11),
                           censor.times = rep(1000,12),
                           accelvar.names = c("Volts per mm","Thick"),
                           describe.string = "NelsonInsulation Factorial Plan")

print(NelsonInsulation.altplan)
print(NelsonInsulation.Weibull.altpv)

##	compute the fisher and vcv matrices

ALT.vcv(NelsonInsulation.altplan,
        NelsonInsulation.Weibull.altpv)

##	compute the large-sample approximate precision (R) factors

evaluate(NelsonInsulation.altplan, 
         NelsonInsulation.Weibull.altpv,
         quantile.of.interest = c(.1,.5))

evaluate(NelsonInsulation.altplan, 
         NelsonInsulation.Weibull.altpv,
         use.conditions = c(175,.163),
         quantile.of.interest = c(.1,.5))

evaluate(NelsonInsulation.altplan, 
         NelsonInsulation.Weibull.altpv,
         use.conditions = c(100,.1),
         quantile.of.interest = c(.1,.5))

##	sample size needed for a given value of R

plot.alt.sample.size(NelsonInsulation.altplan,
                     NelsonInsulation.Weibull.altpv)


NelsonInsulation.sim.out <- ALTsim(NelsonInsulation.altplan, 
                                   NelsonInsulation.Weibull.altpv, number.sim = 400,
                                   show.detail.on = 1)

ALT.plot.time.v.x(NelsonInsulation.sim.out)

ALT.plot.time.v.x(NelsonInsulation.sim.out,
                  x.of.interest = c(100,.1),
                  xlim = c(100,200))

ALT.plot.FracFail.v.Time(NelsonInsulation.sim.out)

ALT.plot.FracFail.v.Time(NelsonInsulation.sim.out,x.of.interest = c(25,10), 
                         xlim = c(100,10000))

summarize.simultation.results(NelsonInsulation.sim.out, 
                              "Joint and Marginal", 
                              focus.quantity1 = "quantile",
                              focus.quantity.detail1 = 0.1,
                              x.of.interest1 = "100;.1",
                              focus.quantity2 = "parameter",
                              focus.quantity.detail2 = 3,
                              x.of.interest2 = NA,
                              plot.type = "density")


}
}
