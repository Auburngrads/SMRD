% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/groupm.Dest.Degrad.R
\name{groupm.Dest.Degrad}
\alias{groupm.Dest.Degrad}
\title{Title}
\usage{
groupm.Dest.Degrad(
  data.ddd,
  transformation.response,
  transformation.time,
  transformation.x,
  distribution,
  group.var = 1:ncol(xmat(data.ddd)),
  ylim = c(NA, NA),
  xlim = c(NA, NA),
  my.title = NULL,
  ylab = NULL,
  xlab = NULL,
  cex = 1.05,
  cex.labs = 1.05,
  cex.points = 1,
  add = F,
  grids = F,
  title.option = GetSMRDDefault("SMRD.TitleOption"),
  do.legend = "On plot",
  subset = T,
  pch.point = NULL,
  response.on.yaxis = T,
  new.data = NULL,
  FailLevel = NULL,
  power = NULL,
  PlotFailDefLine = T,
  debug1 = map.SMRDDebugLevel(),
  lty = NULL,
  lwd = 2,
  mar = c(4.5, 5.25, 3.5, 12.1),
  bty = if (grids) "o" else "L",
  ...
)
}
\arguments{
\item{data.ddd}{}

\item{transformation.response}{}

\item{transformation.time}{}

\item{transformation.x}{}

\item{distribution}{}

\item{group.var}{}

\item{ylim}{}

\item{xlim}{}

\item{my.title}{}

\item{ylab}{}

\item{xlab}{}

\item{cex}{}

\item{cex.labs}{}

\item{cex.points}{}

\item{add}{}

\item{grids}{}

\item{title.option}{}

\item{do.legend}{}

\item{subset}{}

\item{pch.point}{}

\item{response.on.yaxis}{}

\item{new.data}{}

\item{FailLevel}{}

\item{power}{}

\item{PlotFailDefLine}{}

\item{debug1}{}

\item{lty}{}

\item{...}{}
}
\description{
Title
}
\examples{
\dontrun{

InsulationBrkdwn.ddd <- frame.to.ddd(insulationbrkdwn,
                                     response.column = 3, 
                                     time.column = 1,
                                     x.columns = 2,
                                     data.title = "Voltage Breakdown Data",
                                     response.units = "Volts",
                                     time.units = "Weeks")

print(InsulationBrkdwn.ddd)

plot(InsulationBrkdwn.ddd,
     transformation.Response = "log",
     transformation.time = "linear")

tmp <- groupi.Dest.Degrad.indivplots(InsulationBrkdwn.ddd,
                                     transformation.Response = "log", 
                                     transformation.time = "linear",
                                     distribution = "normal")

groupi.Dest.Degrad.oneplot(InsulationBrkdwn.ddd,
                           transformation.Response = "log", 
                           transformation.time = "linear",
                           distribution="normal")
                           
groupm.Dest.Degrad(InsulationBrkdwn.ddd, 
                   distribution = "normal",
                   transformation.Response = "log10",
                   transformation.x = "invtemp",
                   transformation.time = "linear")

groupm.Dest.Degrad(InsulationBrkdwn.ddd, 
                   distribution = "normal",
                   transformation.Response = "log",
                   transformation.x = "arrhenius",
                   transformation.time="linear")

# Do individual analyses at each level of temperature

InsulationBrkdwn.groupi.Dest.Degrad <-groupi.Dest.Degrad(InsulationBrkdwn.ddd,
                                                         distribution = "normal",
                                                         transformation.Response = "log", 
                                                         transformation.time = "sqrt")


plot(InsulationBrkdwn.groupi.Dest.Degrad,
     transformation.x = "Arrhenius")

InsulationBrkdwn.groupm.Dest.Degrad <-groupm.Dest.Degrad(InsulationBrkdwn.ddd,
                                                         distribution = "normal", 
                                                         transformation.Response = "log",
                                                         transformation.x = "arrhenius", 
                                                         transformation.time = "sqrt")

InsulationBrkdwn.groupm.Dest.Degrad<-groupm.Dest.Degrad(InsulationBrkdwn.ddd,
                                                        distribution = "normal",
                                                        transformation.Response = "log",
                                                        transformation.x = "arrhenius",
                                                        transformation.time = "sqrt",
                                                        new.data = c("150,260"))


}
}
