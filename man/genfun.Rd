% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{GENFUN}
\alias{GENFUN}
\title{#***see comments at top of genmax for description of the first
 #***arguments of this subroutine
    #it looks like ti is necessary to sned down the
    scaled information as well as the scaled and transformed
    x and y. 
 #
 #
 #
 #
 #conlev      (I)  confidence level as a probability (e.g.0.95)
 #
 #
 #
 #kodef      (I but should be O!)   range kode for the function to be computed
 #                1    -infinity to +infinity
 #                2     greater than zero
 #                3     between 0 and 1
 #
 #
 #
 #fargv(nargv)  (I) double precision vector of arguments for the
 #                  function (e.g.times for failure probabilities
 #                  or probs for quantiles)
 #
 #
 #nargv      (I)   length of fargv (should be 0 if no argument)
 #
 #
 #
 #kfuncp    (I)    function number
 #              x1  failure probability
 #              x2  distribution quantile
 #              x3  hazard rate
 #            >100  user specified
 #
 #        for more complicated models (e.g., model 1, 2, or 3)
 #        x is the subpopulation number (0 for entire population)
 #
 #
 #
 #  kpopu    (I)  for mixtures, specifies which population for quantiles
 #                 failure probs, etc.
 #
 #
 #kpoint    (I)    row number for getting explanatory variable conditions
 #                 send down kpoint=1 if no regression
 #
 #
 #vcvs(nparm,nparm) (I)  double precision covariance matrix of thetas
 #
 #
 #epsxp     (I)    double precision epsilon for finite differences
 #                 if zero is sent down, 1.0d-08 is used (now hardwired)
 #
 #
 #fest(nargv)   (O)  estimates of function
 #
 #stderr(nargv) (O)  estimated standard error of fest
 #
 #xlow(nargv)   (O)  lower confidence bounds
 #
 #xup(nargv)    (O)  upper confidence bound}
\usage{
GENFUN(
  kmod,
  kdist,
  ilabp,
  ilabd,
  theta,
  thetas,
  kodet,
  ifix,
  nparm,
  npard,
  y,
  ncoly,
  nrownw,
  x,
  ncolx,
  codes,
  weight,
  ty,
  ncolty,
  tcodes,
  kprint,
  kparv,
  nrvar,
  mrelat,
  nrelat,
  mnrvar,
  conlev,
  kodef,
  fargv,
  nargv,
  kfuncp,
  kpopu,
  kpoint,
  vcvs,
  fest,
  std_err,
  xlow,
  xup,
  nxd,
  intd,
  ipxcd,
  irelad,
  ier,
  llog,
  kmodp,
  maxpd,
  nregr,
  kmccde,
  pfail,
  npardm,
  nnum,
  kparm,
  iup,
  nterd
)
}
\description{
#***see comments at top of genmax for description of the first
 #***arguments of this subroutine
    #it looks like ti is necessary to sned down the
    scaled information as well as the scaled and transformed
    x and y. 
 #
 #
 #
 #
 #conlev      (I)  confidence level as a probability (e.g.0.95)
 #
 #
 #
 #kodef      (I but should be O!)   range kode for the function to be computed
 #                1    -infinity to +infinity
 #                2     greater than zero
 #                3     between 0 and 1
 #
 #
 #
 #fargv(nargv)  (I) double precision vector of arguments for the
 #                  function (e.g.times for failure probabilities
 #                  or probs for quantiles)
 #
 #
 #nargv      (I)   length of fargv (should be 0 if no argument)
 #
 #
 #
 #kfuncp    (I)    function number
 #              x1  failure probability
 #              x2  distribution quantile
 #              x3  hazard rate
 #            >100  user specified
 #
 #        for more complicated models (e.g., model 1, 2, or 3)
 #        x is the subpopulation number (0 for entire population)
 #
 #
 #
 #  kpopu    (I)  for mixtures, specifies which population for quantiles
 #                 failure probs, etc.
 #
 #
 #kpoint    (I)    row number for getting explanatory variable conditions
 #                 send down kpoint=1 if no regression
 #
 #
 #vcvs(nparm,nparm) (I)  double precision covariance matrix of thetas
 #
 #
 #epsxp     (I)    double precision epsilon for finite differences
 #                 if zero is sent down, 1.0d-08 is used (now hardwired)
 #
 #
 #fest(nargv)   (O)  estimates of function
 #
 #stderr(nargv) (O)  estimated standard error of fest
 #
 #xlow(nargv)   (O)  lower confidence bounds
 #
 #xup(nargv)    (O)  upper confidence bound
}
