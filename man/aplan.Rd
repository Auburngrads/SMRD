% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{aplan}
\alias{aplan}
\alias{APLAN}
\title{Generate accelerated life test plans with specified characteristics.}
\usage{
APLAN(ap, b1p, b2p, thet1p, pvalp, knownp, idistp, ioptsp, ioptap, ioptmp,
  pifixp, zholdp, pmlimp, zp, pip, fpp, pqp, var, iprinp, ier)
}
\arguments{
\item{ap}{Standardized intercept}

\item{thet1p}{theta1 = sigmah/sigmad;}

\item{pvalp}{Percentile of interest}

\item{knownp}{\code{integer} specifying type of model (see details)}

\item{idistp}{equals 1 for SEV/Weibull, 2 for Normal/Lognormal}

\item{ioptsp}{option for lower stress (see details)}

\item{ioptap}{option for allocation (see details)}

\item{ioptmp}{option for the middle stress level (see details)}

\item{pifixp}{middle allocation when ioptap=3}

\item{zholdp}{fixed value of z when ioptsp=3}

\item{pmlimp}{lower bound on pm when ioptmp=2}

\item{bp}{Standardized slope = (muh-mud)/sigmad;}
}
\value{
\code{zp}     Length-3 vector of standardized stress levels
  \code{pip}    Length-3 vector of proportionate allocations;
  \code{fpp}    Length-3 vector of failure probabilities;
  \code{pqp}    Length-3  vector equal to pip * fp
  \code{var}    Variance of yhat(pvalp)
  \code{iprinp} Level of printing (0 for none, 4 for debug)
}
\description{
Generate accelerated life test plans with specified characteristics.
}
\details{
\code{knownp} = 1 for unknown theta1, 
                2 for known theta1,
                3 for constant sigma quadratic model.
\code{ioptsp} = 1 set low stress such that pmlim is failure prob at zl
                2 optimize low stress level,
                3 set low stress such that zl=zholdp
                4 optimize low and middle stress levels
\code{ioptap} = 1 equal allocation
                2 equal expected number failing
                3 optimize with fixed pim
                4 optimize with e(rl)=r(rm);
                5 optimize with e(rm)=r(rh);
                6 4 2 1 relative allocation;
                7 1 2 2 relative expected failures;
                8 1 2 3 relative expected failures;
                9 optimize low and middle;
                10 optimize with pim=pih (as suggested by Wayne N.)
\code{ioptmp} = 0 xm=(xl+xh)/2
                1 fm=(fl+fh)/2
                2 xm=(xl+xh)/2 if fm>pmlim and fm=pmlim otherwise
                3 float
}
